<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="100" started-at="2018-06-10T03:14:39Z" finished-at="2018-06-10T03:14:39Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="100" started-at="2018-06-10T03:14:39Z" finished-at="2018-06-10T03:14:39Z">
      <class name="com.extent.Functionality2">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.extent.Functionality2@50c87b21]" name="setup" is-config="true" duration-ms="0" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="functionality2Test1()[pri:0, instance:com.extent.Functionality2@50c87b21]" name="functionality2Test1" duration-ms="4" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality2Test1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality2@50c87b21]" name="getResult" is-config="true" duration-ms="1" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality2Test1 status=SUCCESS method=Functionality2.functionality2Test1()[pri:0, instance:com.extent.Functionality2@50c87b21] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="functionality2Test2()[pri:0, instance:com.extent.Functionality2@50c87b21]" name="functionality2Test2" duration-ms="2" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Singh] but found [Ashwani]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Singh] but found [Ashwani]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.extent.Functionality2.functionality2Test2(Functionality2.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality2Test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality2@50c87b21]" name="getResult" is-config="true" duration-ms="2" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality2Test2 status=FAILURE method=Functionality2.functionality2Test2()[pri:0, instance:com.extent.Functionality2@50c87b21] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="functionality2Test3()[pri:0, instance:com.extent.Functionality2@50c87b21]" name="functionality2Test3" duration-ms="3" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.assertNotEquals(Assert.java:831)
	at org.testng.Assert.assertNotEquals(Assert.java:836)
	at com.extent.Functionality2.functionality2Test3(Functionality2.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality2Test3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality2@50c87b21]" name="getResult" is-config="true" duration-ms="3" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality2Test3 status=FAILURE method=Functionality2.functionality2Test3()[pri:0, instance:com.extent.Functionality2@50c87b21] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.extent.Functionality2 -->
      <class name="com.extent.Functionality1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="setUp" is-config="true" duration-ms="475" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="setup" is-config="true" duration-ms="3" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="functionality1Test1()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="functionality1Test1" duration-ms="7" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality1@6d78f375]" name="getResult" is-config="true" duration-ms="10" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test1 status=SUCCESS method=Functionality1.functionality1Test1()[pri:0, instance:com.extent.Functionality1@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="functionality1Test2()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="functionality1Test2" duration-ms="3" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality1@6d78f375]" name="getResult" is-config="true" duration-ms="1" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test2 status=SUCCESS method=Functionality1.functionality1Test2()[pri:0, instance:com.extent.Functionality1@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="functionality1Test3()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="functionality1Test3" duration-ms="2" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.extent.Functionality1@6d78f375]" name="getResult" is-config="true" duration-ms="0" started-at="2018-06-10T08:44:39Z" finished-at="2018-06-10T08:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test3 status=SUCCESS method=Functionality1.functionality1Test3()[pri:0, instance:com.extent.Functionality1@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.extent.Functionality1@6d78f375]" name="tearDown" is-config="true" duration-ms="530" started-at="2018-06-10T08:44:40Z" finished-at="2018-06-10T08:44:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.extent.Functionality1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
